// The ui-variables file is provided by base themes provided by Atom.
//
// See https://github.com/atom/atom-dark-ui/blob/master/styles/ui-variables.less
// for a full listing of what's available.
@import "ui-variables";

.breakdown-credentials {
    button,
    input {
        color: @input-background-color;
    }

    button {
        margin-right: 1.62em;
    }

    input {
        font-weight: bold;
    }

    dl {
        display: inline-block;
        margin-right: 1.62em;
    }
}

.breakdown-statistics {
    .gutter {
        background: @tool-panel-background-color;
        padding: 5px;
        cursor: pointer;
    }

    .content {
        background: @tab-background-color-active;
        overflow: auto;
    }

    #durationContainer {
        margin-top: 1.62em * 1.62em;
    }

    .download {
        font-size: 1.62em * 1.62em;
        text-align: center;
        padding-top: 200px;
    }

    .done {
        stroke: @tab-background-color-active;
        fill: @background-color-success;
        color: @background-color-success;
    }

    .indeterminate {
        stroke: @tab-background-color-active;
        fill: @background-color-warning;
        color: @background-color-warning;
    }

    .new {
        stroke: @tab-background-color-active;
        fill: @text-color;
        color: @text-color;
    }

    .markers {
        background-color: @tab-background-color-active;
        color: @text-color;
    }

    .predict {
        background-color: @tab-background-color-active;
        stroke: @background-color-success;
        color: @background-color-success;
    }

    .legend {
        color: @text-color;
    }

    .axis {
        color: @text-color;
    }

    .label {
        &:hover {
            text-decoration: underline;
        }
    }

    .reload {
        margin-left: 1.62em * 1.62em;

        &:hover {
            text-decoration: underline;
        }
    }
}

atom-text-editor {
    // Controls the appearance of the unfolded icon in the gutter
    .gutter .line-number .icon-right {
        opacity: 1;
        color: @text-color-highlight;

        &:hover {
            color: lighten(@text-color-highlight, 15%);
        }

        &::before {
            content: "▼";
        }
    }
    // Controls the appearance of the folded icon in the gutter
    .gutter .line-number.folded .icon-right,
    .gutter:hover .line-number.folded .icon-right {
        &::before {
            content: "►";
        }
    }

    .syntax--breakdown {
        color: @ui-site-color-4;
    }

    .syntax--punctuation {
        color: @text-color-success;
    }

    .syntax--settings {
        .syntax--begin,
        .syntax--end,
        .syntax--key,
        .syntax--list,
        .syntax--punctuation,
        .syntax--value {
            color: @text-color-warning;
        }
    }

    .syntax--statistics {
        color: @text-color-success;

        .syntax--issuecount {
            color: @text-color-success;
        }

        .syntax--timetracking {
            color: @text-color-success;

            .syntax--remaining {
                color: @text-color-warning;
            }
        }
    }

    .syntax--fields.syntax--begin,
    .syntax--fields.syntax--end,
    .syntax--issue.syntax--field.syntax--value,
    .syntax--issue.syntax--type-and-state {
        color: @text-color-success;
    }

    .syntax--active.syntax--sprint {
        color: @text-color-warning;
    }

    .syntax--editable-content {
        color: @text-color-warning;
    }

    .syntax--issue.syntax--field.syntax--identifier,
    .syntax--issue.syntax--summary,
    .syntax--issue.syntax--unresolved {
        color: @text-color-highlight;
    }

    .syntax--issue.syntax--resolved {
        .syntax--fields.syntax--begin,
        .syntax--fields.syntax--end,
        .syntax--issue.syntax--component,
        .syntax--issue.syntax--field.syntax--identifier,
        .syntax--issue.syntax--field.syntax--value,
        .syntax--issue.syntax--key,
        .syntax--issue.syntax--parent.syntax--key,
        .syntax--issue.syntax--resolved,
        .syntax--issue.syntax--summary,
        .syntax--punctuation {
            color: darken(@text-color-success, 30%);
        }

        .syntax--issue.syntax--status {
            .syntax--issue.syntax--field.syntax--value {
                color: @text-color-success;
            }
        }

        .syntax--timetracking {
            color: darken(@text-color-success, 30%);

            .syntax--remaining {
                color: @text-color-warning;
            }
        }
    }

    .syntax--issue.syntax--delete {
        .syntax--issue.syntax--key,
        .syntax--issue.syntax--parent.syntax--key {
            color: @text-color-error;
        }
        color: @text-color-error;
    }

    .syntax--issue.syntax--empty-parent,
    .syntax--issue.syntax--field.syntax--value,
    .syntax--issue.syntax--no-parent-in-selection,
    .syntax--issue.syntax--type.syntax--epic,
    .syntax--issue.syntax--type.syntax--story,
    .syntax--issue.syntax--type.syntax--sub-task {
        color: @text-color-success;
    }

    .syntax--issue.syntax--key,
    .syntax--issue.syntax--parent.syntax--key,
    .syntax--jira-url .syntax--value,
    .syntax--project .syntax--value {
        color: @text-color-warning;

        &:hover {
            text-decoration: underline;
            cursor: pointer;
        }
    }

    .syntax--issue.syntax--description {
        color: darken(@text-color-highlight, 15%);
    }

    .syntax--issue.syntax--acceptance.syntax--field,
    .syntax--issue.syntax--description.syntax--field {
         color: @text-color-success;
    }
}

.flash {
    background: @background-color-error !important;
    transition: background 0.25s ease;
}

.success {
    color: @text-color-success;
}

.blink {
    animation: 1.5s infinite blink_effect;
}
@keyframes blink_effect {
    0% {
        visibility: visible;
    }

    50% {
        visibility: hidden;
    }

    100% {
        visibility: hidden;
    }
}